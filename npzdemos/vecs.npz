
import std;
const vecs = import npvec;

func vecString(vec) {
  let s = "<";
  let n = vecs.size(vec);

  for (let i = 0; i < n; i += 1) {
    s = s + std.asString(vecs.at(vec, i));
    if (i < n - 1)
      s = s + ", ";
  }

  return s + ">";
}

let vector = vecs.vecFrom([1, 2, 5, 4]);
std.println(vecString(vector));

vecs.append(vector, 17);
std.println(vecString(vector));

vecs.remove(vector, 2);
std.println(vecString(vector));

vecs.insert(vector, 12, 2);
std.println(vecString(vector));

std.println(vecs.find(vector, 2));
std.println(vecs.find(vector, 400));

std.println(std.asString(vecs.pop(vector)));

std.println(vecString(vector));

std.println(vecs.size(vector));
